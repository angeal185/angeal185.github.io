{% extends 'layout.njk' %}{% block content %}
<div class="mt100 w90 center">
  <h1>{{title}}</h1>

  <h3>Skills left:<span>{{skills.codeLeftData | length}}</span></h3>
  <button id="codeLeftNew" class="btn mb40">Add entry</button>
  <div id="codeLeftContainer" class="row">
  {% for i in skills.codeLeftData %}
  {{macro.skills(a=i.title,b=i.percent,x="codeLeft")}}
  {% endfor %}
  </div>

  <h3>Skills right:<span>{{skills.codeRightData | length}}</span></h3>
  <button id="codeRightNew" class="btn mb40">Add entry</button>
  <div id="codeRightContainer" class="row">
  {% for i in skills.codeRightData %}
  {{macro.skills(a=i.title,b=i.percent,x="codeRight")}}
  {% endfor %}
  </div>

  <h3>Frameworks left:<span>{{skills.skillsLeftData | length}}</span></h3>
  <button id="skillsLeftNew" class="btn mb40">Add entry</button>
  <div id="skillsLeftContainer" class="row">
  {% for i in skills.skillsLeftData %}
  {{macro.skills(a=i.title,b=i.percent,x="skillsLeft")}}
  {% endfor %}
  </div>

  <h3>Frameworks right:<span>{{skills.skillsRightData | length}}</span></h3>
  <button id="skillsRightNew" class="btn mb40">Add entry</button>
  <div id="skillsRightContainer" class="row">
  {% for i in skills.skillsRightData %}
  {{macro.skills(a=i.title,b=i.percent,x="skillsRight")}}
  {% endfor %}
  </div>

  <h3>DB left:<span>{{skills.dbLeftData | length}}</span></h3>
  <button id="dbLeftNew" class="btn mb40">Add entry</button>
  <div id="dbLeftContainer" class="row">
  {% for i in skills.dbLeftData %}
  {{macro.skills(a=i.title,b=i.percent,x="dbLeft")}}
  {% endfor %}
  </div>

  <h3>DB right:<span>{{skills.dbRightData | length}}</span></h3>
  <button id="dbRightNew" class="btn mb40">Add entry</button>
  <div id="dbRightContainer" class="row">
  {% for i in skills.dbRightData %}
  {{macro.skills(a=i.title,b=i.percent,x="dbRight")}}
  {% endfor %}
  </div>

  <h3>CMS left:<span>{{skills.CMSLeftData | length}}</span></h3>
  <button id="cmsLeftNew" class="btn mb40">Add entry</button>
  <div id="cmsLeftContainer" class="row">
  {% for i in skills.CMSLeftData %}
  {{macro.skills(a=i.title,b=i.percent,x="CMSLeft")}}
  {% endfor %}
  </div>

  <h3>CMS right:<span>{{skills.CMSRightData | length}}</span></h3>
  <button id="cmsRightNew" class="btn mb40">Add entry</button>
  <div id="cmsRightContainer" class="row">
  {% for i in skills.CMSRightData %}
  {{macro.skills(a=i.title,b=i.percent,x="CMSRight")}}
  {% endfor %}
  </div>

  <h3>OS left:<span>{{skills.OSLeftData | length}}</span></h3>
  <button id="osLeftNew" class="btn mb40">Add entry</button>
  <div id="osLeftContainer" class="row">
  {% for i in skills.OSLeftData %}
  {{macro.skills(a=i.title,b=i.percent,x="OSLeft")}}
  {% endfor %}
  </div>

  <h3>OS right:<span>{{skills.OSRightData | length}}</span></h3>
  <button id="osRightNew" class="btn mb40">Add entry</button>
  <div id="osRightContainer" class="row">
  {% for i in skills.OSRightData %}
  {{macro.skills(a=i.title,b=i.percent,x="OSRight")}}
  {% endfor %}
  </div>

  <h3>Other left:<span>{{skills.otherLeftData | length}}</span></h3>
  <button id="otherLeftNew" class="btn mb40">Add entry</button>
  <div id="otherLeftContainer" class="row">
  {% for i in skills.otherLeftData %}
  {{macro.skillsMin(a=i.title,x="otherLeft")}}
  {% endfor %}
  </div>

  <h3>Other right:<span>{{skills.otherRightData | length}}</span></h3>
  <button id="otherRightNew" class="btn mb40">Add entry</button>
  <div id="otherRightContainer" class="row">
  {% for i in skills.otherRightData %}
  {{macro.skillsMin(a=i.title,x="otherRight")}}
  {% endfor %}
  </div>

  <h3>API left:<span>{{skills.APILeftData | length}}</span></h3>
  <button id="APILeftNew" class="btn mb40">Add entry</button>
  <div id="APILeftContainer" class="row">
  {% for i in skills.APILeftData %}
  {{macro.skillsMin(a=i.title,x="APILeft")}}
  {% endfor %}
  </div>

  <h3>API right:<span>{{skills.APIRightData | length}}</span></h3>
  <button id="APIRightNew" class="btn mb40">Add entry</button>
  <div id="APIRightContainer" class="row">
  {% for i in skills.APIRightData %}
  {{macro.skillsMin(a=i.title,x="APIRight")}}
  {% endfor %}
  </div>
  <textarea type="text" id="editor1"></textarea>
  <div class="row">
    <div class="col s6 sort">
      <button type="button" id="showIt" class="effect-waves btn">Update</button>
    </div>
    <div class="col s6 sort">
      <button type="button" id="commit" class="effect-waves btn" disabled>Commit</button>
    </div>
  </div>
  <form role="form" id="post" action="/update{{title}}" method="post">
      <textarea type="text" id="toUpdate" name="toUpdate" class="form-control" hidden></textarea>
  </form>





</div>
{% endblock %}
{%block scripts%}
<script>
const skills =  {{skills|dump|safe}};
var arr = {"codeLeftData":[],"codeRightData":[],"skillsLeftData":[],"skillsRightData":[],"dbLeftData":[],"dbRightData":[],"CMSLeftData":[],"CMSRightData":[],"OSLeftData":[],"OSRightData":[],"otherLeftData":[],"otherRightData":[],"APILeftData":[],"APIRightData":[]};
var codeL = arr.codeLeftData,
codeR = arr.codeRightData,
skillsL = arr.skillsLeftData,
skillsR = arr.skillsRightData,
dbL = arr.dbLeftData,
dbR = arr.dbRightData,
CMSL = arr.CMSLeftData,
CMSR = arr.CMSRightData,
OSL = arr.OSLeftData,
OSR = arr.OSRightData,
otherL = arr.otherLeftData,
otherR = arr.otherRightData,
APIL = arr.APILeftData,
APIR = arr.APIRightData,
editor = ace.edit("editor1");
var lst = ["codeLeft","codeRight","skillsLeft","skillsRight","dbLeft","dbRight","cmsLeft","cmsRight","osLeft","osRight","otherLeft","otherRight","APILeft","APIRight"];

  function showEntries(){
    $('.showEntries').click(function() {
      $(this).text($(this).text() == 'hide' ? 'show' : 'hide');
      $(this).parents('.card-title').next().toggleClass('hidden');
    });
    $('.removeBlock').click(function() {
      $(this).parents('.sort').remove();
    });
  }

  lst.forEach(function(i) {
    var container = document.getElementById(i + "Container");
    var sort = Sortable.create(container, {
      animation: 150,
      handle: ".sort",
      draggable: ".sort",
      onUpdate: function (evt){
         var item = evt.item;
       }
    });

    $('#'+i+'New').click(function() {
      var a = $('.sort').eq(1).clone();
      a.find('h5').html('<h5>new<span class="showEntries">show</span></h5>');
      a.find('.entrytitle,.entrypercent').val('');
      a.prependTo('#'+i+'Container');
      $('.showEntries,.removeBlock').unbind();
      showEntries();
    });
  });

  editor.setTheme("ace/theme/twilight");
  editor.session.setMode("ace/mode/json");

  $('#showIt').click(function() {


    $('#toUpdate').empty();

    function bld(i,e){
      $(i).each(function(index, el) {
          let inp = $(this).children('.s6');
          e.push({
              "title":inp.children('.entrytitle').val(),
              "percent":inp.children('.entrypercent').val()
            });
        });
    }
    function bldMin(i,e){
      $(i).each(function(index, el) {
          let inp = $(this).children('.s6');
          e.push({
              "title":inp.children('.entrytitle').val(),
              "percent":inp.children('.entrypercent').val()
            });
        });
    }

    bld('.codeLeftentry',codeL);
    bld('.codeRightentry',codeR);
    bld('.skillsLeftentry',skillsL);
    bld('.skillsRightentry',skillsR);
    bld('.dbLeftentry',dbL);
    bld('.dbRightentry',dbR);
    bld('.CMSLeftentry',CMSL);
    bld('.CMSRightentry',CMSR);
    bld('.OSLeftentry',OSL);
    bld('.OSRightentry',OSR);

    bldMin('.otherLeftentry',otherL);
    bldMin('.otherRightentry',otherR);
    bldMin('.APILeftentry',APIL);
    bldMin('.APIRightentry',APIR);

    editor.getSession().setUseWrapMode(true);
    editor.insert(JSON.stringify(arr, null, 2));
    $('#commit').attr('disabled', false);
    //console.log(JSON.stringify(arr));
  });

  $('#commit').click(function(event) {
    $('#toUpdate').val(editor.getValue());
    $('#post').submit();
  });

  showEntries();
</script>
{% endblock %}
